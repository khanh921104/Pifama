import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import api from "../../api/axiosConfig";

const PenForm = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    ma_khu: "",
    ten_chuong: "",
    suc_chua: "",
    trang_thai: "",
  });
  const [areas, setAreas] = useState([]);
  const [loading, setLoading] = useState(false);

  // üü¢ L·∫•y danh s√°ch khu tr·∫°i ƒë·ªÉ ch·ªçn (dropdown)
  useEffect(() => {
    api
      .get("/areas")
      .then((res) => setAreas(res.data))
      .catch((err) => console.error("L·ªói khi t·∫£i khu tr·∫°i:", err));
  }, []);

  // üü¢ N·∫øu c√≥ id th√¨ load th√¥ng tin chu·ªìng ƒë·ªÉ s·ª≠a
  useEffect(() => {
    if (id) {
      setLoading(true);
      api
        .get(`/pens/${id}`)
        .then((res) => setFormData(res.data))
        .catch((err) => console.error("L·ªói khi t·∫£i chu·ªìng:", err))
        .finally(() => setLoading(false));
    }
  }, [id]);

  // üü¢ X·ª≠ l√Ω thay ƒë·ªïi input
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // üü¢ X·ª≠ l√Ω submit form
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      if (id) {
        await api.put(`/pens/${id}`, formData);
        alert("‚úÖ C·∫≠p nh·∫≠t chu·ªìng th√†nh c√¥ng!");
      } else {
        await api.post("/pens", formData);
        alert("‚úÖ Th√™m chu·ªìng m·ªõi th√†nh c√¥ng!");
      }
      navigate("/pens");
    } catch (err) {
      console.error("‚ùå L·ªói khi l∆∞u chu·ªìng:", err);
      alert("L·ªói khi l∆∞u d·ªØ li·ªáu chu·ªìng!");
    }
  };

  if (loading) return <p>ƒêang t·∫£i...</p>;

  return (
    <div style={{ padding: "20px" }}>
      <h2>{id ? "C·∫≠p nh·∫≠t chu·ªìng" : "Th√™m chu·ªìng m·ªõi"}</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Khu tr·∫°i:</label>
          <select name="ma_khu" value={formData.ma_khu} onChange={handleChange} required>
            <option value="">-- Ch·ªçn khu tr·∫°i --</option>
            {areas.map((a) => (
              <option key={a.id} value={a.id}>
                {a.ten_khu}
              </option>
            ))}
          </select>
        </div>

        <div>
          <label>T√™n chu·ªìng:</label>
          <input
            type="text"
            name="ten_chuong"
            value={formData.ten_chuong}
            onChange={handleChange}
            required
          />
        </div>

        <div>
          <label>S·ª©c ch·ª©a:</label>
          <input
            type="number"
            name="suc_chua"
            value={formData.suc_chua}
            onChange={handleChange}
            required
          />
        </div>

        <div>
          <label>Tr·∫°ng th√°i:</label>
          <input
            type="text"
            name="trang_thai"
            value={formData.trang_thai}
            onChange={handleChange}
            required
          />
        </div>

        <button type="submit">{id ? "C·∫≠p nh·∫≠t" : "Th√™m m·ªõi"}</button>
      </form>
    </div>
  );
};

export default PenForm;
